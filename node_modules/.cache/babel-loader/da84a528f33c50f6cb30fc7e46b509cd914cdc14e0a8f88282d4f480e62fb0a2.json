{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\dashboard\\\\prasad\\\\frontend-react\\\\src\\\\components\\\\AuthModal.tsx\";\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Login from './Login';\nimport ForgotPassword from './ForgotPassword';\nimport { LoginRequest, ForgotPasswordRequest } from '../actions/homePageAction';\nimport { connect } from 'react-redux';\n//import { logger } from '../../helper/Logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AuthModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClose = () => {\n      logger('calling............');\n      this.setState({\n        show: false,\n        modalLabel: 'login'\n      });\n    };\n    // To manage forgot password modal\n    this.forgotShow = () => {\n      // console.log(('forgotShowforgotShow')\n      this.setState({\n        modalLabel: 'forgot'\n      });\n    };\n    this.resetShow = () => {\n      this.setState({\n        modalLabel: 'reset'\n      });\n    };\n    // To manage login modal\n    this.showLoginModal = () => {\n      this.setState({\n        modalLabel: 'login'\n      });\n    };\n    this.componentDidUpdate = prevProps => {\n      const {\n        forgotPasswordReducer\n      } = this.props;\n      // To close the login popup modal\n      if (prevProps.forgotPasswordReducer && prevProps.forgotPasswordReducer.isLoading !== forgotPasswordReducer.isLoading && !forgotPasswordReducer.isError) {\n        // this.props.handleClose();\n        this.showLoginModal();\n        this.setState({\n          modalLabel: 'login'\n        });\n      }\n    };\n    this.state = {\n      open: false,\n      show: false,\n      sidebar: false,\n      searchbar: false,\n      submenu: false,\n      modalLabel: 'login'\n    };\n  }\n  render() {\n    // console.log(('index-modalLabel', this.props.modalLabel)\n    const {\n      loginReducer\n    } = this.props;\n    const {\n      show,\n      modalLabel\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <Modal\n      //   centered\n      //   show={show}\n      //   className={'login-modal'}\n      //   onHide={this.props.handleClose}\n      // >\n      _jsxDEV(Modal.Body, {\n        children: modalLabel === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n          forgotShow: this.forgotShow,\n          resetShow: this.resetShow,\n          onLogin: this.props.onLogin,\n          loginReducer: loginReducer,\n          ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(ForgotPassword, {\n          forgotPasswordReq: this.props.forgotPasswordReq,\n          checkPage: modalLabel === 'reset' ? 'Reset' : 'Forgot',\n          showLoginModal: this.showLoginModal,\n          ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n      // </Modal>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  loginReducer: state.loginReducer,\n  forgotPasswordReducer: state.forgotPasswordReducer\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogin: data => {\n      dispatch(LoginRequest(data));\n    },\n    forgotPasswordReq: email => {\n      dispatch(ForgotPasswordRequest({\n        email\n      }));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthModal);","map":{"version":3,"names":["React","Component","Modal","Login","ForgotPassword","LoginRequest","ForgotPasswordRequest","connect","jsxDEV","_jsxDEV","AuthModal","constructor","props","handleClose","logger","setState","show","modalLabel","forgotShow","resetShow","showLoginModal","componentDidUpdate","prevProps","forgotPasswordReducer","isLoading","isError","state","open","sidebar","searchbar","submenu","render","loginReducer","Body","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","forgotPasswordReq","checkPage","mapStateToProps","mapDispatchToProps","dispatch","data","email"],"sources":["C:/xampp2/htdocs/dashboard/prasad/frontend-react/src/components/AuthModal.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {\r\n  IAuthModalProps,\r\n  ILoginActionData,\r\n  IRootState,\r\n} from '../actions/homePageAction';\r\nimport Login from './Login';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport { LoginRequest, ForgotPasswordRequest } from '../actions/homePageAction';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\n//import { logger } from '../../helper/Logger';\r\n\r\n\r\nclass AuthModal extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      show: false,\r\n      sidebar: false,\r\n      searchbar: false,\r\n      submenu: false,\r\n      modalLabel: 'login',\r\n    };\r\n  }\r\n\r\n\r\n  handleClose = () => {\r\n    logger('calling............');\r\n    this.setState({\r\n      show: false,\r\n      modalLabel: 'login',\r\n    });\r\n  };\r\n\r\n  // To manage forgot password modal\r\n  forgotShow = () => {   \r\n    // console.log(('forgotShowforgotShow')\r\n    this.setState({ modalLabel: 'forgot' });\r\n  };\r\n  resetShow = () => {\r\n    this.setState({ modalLabel: 'reset' });\r\n  };\r\n  // To manage login modal\r\n  showLoginModal = () => {\r\n    this.setState({ modalLabel: 'login' });\r\n  };\r\n\r\n  componentDidUpdate = (prevProps: any) => {\r\n    const { forgotPasswordReducer } = this.props;\r\n    // To close the login popup modal\r\n    if (\r\n      prevProps.forgotPasswordReducer &&\r\n      prevProps.forgotPasswordReducer.isLoading !== forgotPasswordReducer.isLoading &&\r\n      !forgotPasswordReducer.isError\r\n    ) {\r\n      // this.props.handleClose();\r\n      this.showLoginModal()\r\n      this.setState({ modalLabel: 'login' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // console.log(('index-modalLabel', this.props.modalLabel)\r\n    const { loginReducer } = this.props;\r\n    const { show, modalLabel } = this.state;\r\n    return (\r\n      // <Modal\r\n      //   centered\r\n      //   show={show}\r\n      //   className={'login-modal'}\r\n      //   onHide={this.props.handleClose}\r\n      // >\r\n      <Modal.Body>\r\n        {/* <Button\r\n            variant='link'\r\n            className='btn-close'\r\n            onClick={this.props.handleClose}\r\n          >\r\n            &times;\r\n          </Button> */}          \r\n        {modalLabel === 'login' ? (\r\n          <Login\r\n            forgotShow={this.forgotShow}\r\n            resetShow={this.resetShow}\r\n            onLogin={this.props.onLogin}\r\n            loginReducer={loginReducer}\r\n            {...this.props}\r\n          />\r\n        ) : (\r\n            <ForgotPassword\r\n              forgotPasswordReq={this.props.forgotPasswordReq}\r\n              checkPage={modalLabel === 'reset' ? 'Reset' : 'Forgot'}\r\n              showLoginModal={this.showLoginModal} \r\n              {...this.props}\r\n            />\r\n          )}\r\n      </Modal.Body>\r\n      // </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps: any = (state: IRootState) => ({\r\n  loginReducer: state.loginReducer,\r\n  forgotPasswordReducer: state.forgotPasswordReducer,\r\n});\r\n\r\nconst mapDispatchToProps: any = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onLogin: (data: ILoginActionData) => {\r\n      dispatch(LoginRequest(data));\r\n    },\r\n    forgotPasswordReq: (email: string) => {\r\n      dispatch(ForgotPasswordRequest({ email }));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(AuthModal);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}