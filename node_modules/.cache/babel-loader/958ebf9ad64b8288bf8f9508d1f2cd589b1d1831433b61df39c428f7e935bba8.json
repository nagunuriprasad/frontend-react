{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\dashboard\\\\prasad\\\\frontend-react\\\\src\\\\LanguageSelector.tsx\",\n  _s = $RefreshSig$();\n// src/LanguageSelector.tsx\nimport React, { useState } from 'react';\nimport './assets/css/LanguageSelector.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = ['Hindi', 'Bengali', 'Telugu', 'Marathi', 'Tamil', 'Gujarati', 'Urdu', 'Malayalam', 'Kannada', 'Odia', 'Punjabi', 'Assamese', 'Maithili', 'Dogri', 'Santhali', 'Kashmiri'];\nconst LanguageSelector = ({\n  onLanguageChange\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const handleImageClick = () => {\n    setIsOpen(!isOpen); // Toggle the language list visibility\n  };\n  const handleLanguageClick = language => {\n    setSelectedLanguage(language);\n    onLanguageChange(language); // Call the parent callback\n    setIsOpen(false); // Close the language list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"path_to_language_selector_image.jpg\" // Replace with your image path\n      ,\n      alt: \"Select Language\",\n      className: \"selector-image\",\n      onClick: handleImageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"language-list\",\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleLanguageClick(lang),\n        children: lang\n      }, lang, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageSelector, \"oDNr2UgTsY1fCCghqmLK2UATxVU=\");\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","languages","LanguageSelector","onLanguageChange","_s","isOpen","setIsOpen","selectedLanguage","setSelectedLanguage","handleImageClick","handleLanguageClick","language","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","lang","_c","$RefreshReg$"],"sources":["C:/xampp2/htdocs/dashboard/prasad/frontend-react/src/LanguageSelector.tsx"],"sourcesContent":["// src/LanguageSelector.tsx\r\nimport React, { useState } from 'react';\r\nimport './assets/css/LanguageSelector.css'; // Import CSS for styling\r\n\r\ninterface LanguageSelectorProps {\r\n    onLanguageChange: (language: string) => void; // Callback to change the language\r\n}\r\n\r\nconst languages = [\r\n    'Hindi',\r\n    'Bengali',\r\n    'Telugu',\r\n    'Marathi',\r\n    'Tamil',\r\n    'Gujarati',\r\n    'Urdu',\r\n    'Malayalam',\r\n    'Kannada',\r\n    'Odia',\r\n    'Punjabi',\r\n    'Assamese',\r\n    'Maithili',\r\n    'Dogri',\r\n    'Santhali',\r\n    'Kashmiri',\r\n];\r\n\r\nconst LanguageSelector: React.FC<LanguageSelectorProps> = ({ onLanguageChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedLanguage, setSelectedLanguage] = useState('');\r\n\r\n    const handleImageClick = () => {\r\n        setIsOpen(!isOpen); // Toggle the language list visibility\r\n    };\r\n\r\n    const handleLanguageClick = (language: string) => {\r\n        setSelectedLanguage(language);\r\n        onLanguageChange(language); // Call the parent callback\r\n        setIsOpen(false); // Close the language list\r\n    };\r\n\r\n    return (\r\n        <div className=\"language-selector\">\r\n            <img\r\n                src=\"path_to_language_selector_image.jpg\" // Replace with your image path\r\n                alt=\"Select Language\"\r\n                className=\"selector-image\"\r\n                onClick={handleImageClick}\r\n            />\r\n            {isOpen && (\r\n                <ul className=\"language-list\">\r\n                    {languages.map((lang) => (\r\n                        <li key={lang} onClick={() => handleLanguageClick(lang)}>\r\n                            {lang}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LanguageSelector;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mCAAmC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM5C,MAAMC,SAAS,GAAG,CACd,OAAO,EACP,SAAS,EACT,QAAQ,EACR,SAAS,EACT,OAAO,EACP,UAAU,EACV,MAAM,EACN,WAAW,EACX,SAAS,EACT,MAAM,EACN,SAAS,EACT,UAAU,EACV,UAAU,EACV,OAAO,EACP,UAAU,EACV,UAAU,CACb;AAED,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC3BH,SAAS,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMK,mBAAmB,GAAIC,QAAgB,IAAK;IAC9CH,mBAAmB,CAACG,QAAQ,CAAC;IAC7BR,gBAAgB,CAACQ,QAAQ,CAAC,CAAC,CAAC;IAC5BL,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACIN,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bb,OAAA;MACIc,GAAG,EAAC,qCAAqC,CAAC;MAAA;MAC1CC,GAAG,EAAC,iBAAiB;MACrBH,SAAS,EAAC,gBAAgB;MAC1BI,OAAO,EAAEP;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACDf,MAAM,iBACHL,OAAA;MAAIY,SAAS,EAAC,eAAe;MAAAC,QAAA,EACxBZ,SAAS,CAACoB,GAAG,CAAEC,IAAI,iBAChBtB,OAAA;QAAegB,OAAO,EAAEA,CAAA,KAAMN,mBAAmB,CAACY,IAAI,CAAE;QAAAT,QAAA,EACnDS;MAAI,GADAA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CAjCIF,gBAAiD;AAAAqB,EAAA,GAAjDrB,gBAAiD;AAmCvD,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}