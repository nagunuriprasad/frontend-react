{"ast":null,"code":"// src/features/cart/cartReducer.js\nimport { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from '../actions/cartActions';\nconst initialState = {\n  products: [],\n  totalAmount: 0\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.quantity;\n      const existingProductIndex = state.products.findIndex(product => product.id === action.payload.id);\n      const existingProduct = state.products[existingProductIndex];\n      let updatedProducts;\n      if (existingProduct) {\n        const updatedProduct = {\n          ...existingProduct,\n          quantity: existingProduct.quantity + action.payload.quantity\n        };\n        updatedProducts = [...state.products];\n        updatedProducts[existingProductIndex] = updatedProduct;\n      } else {\n        updatedProducts = state.products.concat(action.payload);\n      }\n      return {\n        products: updatedProducts,\n        totalAmount: updatedTotalAmount\n      };\n    case REMOVE_FROM_CART:\n      const productToRemoveIndex = state.products.findIndex(product => product.id === action.payload);\n      const productToRemove = state.products[productToRemoveIndex];\n      const updatedProductsAfterRemoval = state.products.filter(product => product.id !== action.payload);\n      const updatedTotalAmountAfterRemoval = state.totalAmount - productToRemove.price * productToRemove.quantity;\n      return {\n        products: updatedProductsAfterRemoval,\n        totalAmount: updatedTotalAmountAfterRemoval\n      };\n    case CLEAR_CART:\n      return {\n        products: [],\n        totalAmount: 0\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["ADD_TO_CART","REMOVE_FROM_CART","CLEAR_CART","initialState","products","totalAmount","cartReducer","state","action","type","updatedTotalAmount","payload","price","quantity","existingProductIndex","findIndex","product","id","existingProduct","updatedProducts","updatedProduct","concat","productToRemoveIndex","productToRemove","updatedProductsAfterRemoval","filter","updatedTotalAmountAfterRemoval"],"sources":["C:/xampp2/htdocs/dashboard/prasad/frontend-react/src/reducer/cartReducer.ts"],"sourcesContent":["// src/features/cart/cartReducer.js\r\nimport { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from '../actions/cartActions';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.payload.price * action.payload.quantity;\r\n      const existingProductIndex = state.products.findIndex(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n      const existingProduct = state.products[existingProductIndex];\r\n      let updatedProducts;\r\n      if (existingProduct) {\r\n        const updatedProduct = {\r\n          ...existingProduct,\r\n          quantity: existingProduct.quantity + action.payload.quantity,\r\n        };\r\n        updatedProducts = [...state.products];\r\n        updatedProducts[existingProductIndex] = updatedProduct;\r\n      } else {\r\n        updatedProducts = state.products.concat(action.payload);\r\n      }\r\n      return {\r\n        products: updatedProducts,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      const productToRemoveIndex = state.products.findIndex(\r\n        (product) => product.id === action.payload\r\n      );\r\n      const productToRemove = state.products[productToRemoveIndex];\r\n      const updatedProductsAfterRemoval = state.products.filter(\r\n        (product) => product.id !== action.payload\r\n      );\r\n      const updatedTotalAmountAfterRemoval =\r\n        state.totalAmount - productToRemove.price * productToRemove.quantity;\r\n      return {\r\n        products: updatedProductsAfterRemoval,\r\n        totalAmount: updatedTotalAmountAfterRemoval,\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        products: [],\r\n        totalAmount: 0,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,wBAAwB;AAElF,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,WAAW;MACd,MAAMU,kBAAkB,GACtBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,OAAO,CAACC,KAAK,GAAGJ,MAAM,CAACG,OAAO,CAACE,QAAQ;MACpE,MAAMC,oBAAoB,GAAGP,KAAK,CAACH,QAAQ,CAACW,SAAS,CAClDC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKT,MAAM,CAACG,OAAO,CAACM,EAC7C,CAAC;MACD,MAAMC,eAAe,GAAGX,KAAK,CAACH,QAAQ,CAACU,oBAAoB,CAAC;MAC5D,IAAIK,eAAe;MACnB,IAAID,eAAe,EAAE;QACnB,MAAME,cAAc,GAAG;UACrB,GAAGF,eAAe;UAClBL,QAAQ,EAAEK,eAAe,CAACL,QAAQ,GAAGL,MAAM,CAACG,OAAO,CAACE;QACtD,CAAC;QACDM,eAAe,GAAG,CAAC,GAAGZ,KAAK,CAACH,QAAQ,CAAC;QACrCe,eAAe,CAACL,oBAAoB,CAAC,GAAGM,cAAc;MACxD,CAAC,MAAM;QACLD,eAAe,GAAGZ,KAAK,CAACH,QAAQ,CAACiB,MAAM,CAACb,MAAM,CAACG,OAAO,CAAC;MACzD;MACA,OAAO;QACLP,QAAQ,EAAEe,eAAe;QACzBd,WAAW,EAAEK;MACf,CAAC;IAEH,KAAKT,gBAAgB;MACnB,MAAMqB,oBAAoB,GAAGf,KAAK,CAACH,QAAQ,CAACW,SAAS,CAClDC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKT,MAAM,CAACG,OACrC,CAAC;MACD,MAAMY,eAAe,GAAGhB,KAAK,CAACH,QAAQ,CAACkB,oBAAoB,CAAC;MAC5D,MAAME,2BAA2B,GAAGjB,KAAK,CAACH,QAAQ,CAACqB,MAAM,CACtDT,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKT,MAAM,CAACG,OACrC,CAAC;MACD,MAAMe,8BAA8B,GAClCnB,KAAK,CAACF,WAAW,GAAGkB,eAAe,CAACX,KAAK,GAAGW,eAAe,CAACV,QAAQ;MACtE,OAAO;QACLT,QAAQ,EAAEoB,2BAA2B;QACrCnB,WAAW,EAAEqB;MACf,CAAC;IAEH,KAAKxB,UAAU;MACb,OAAO;QACLE,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE;MACf,CAAC;IAEH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}