{"ast":null,"code":"import { createAction } from 'redux-actions';\n//import { IredirectPath } from '';\n\nexport let HomePageActionTypes = /*#__PURE__*/function (HomePageActionTypes) {\n  HomePageActionTypes[\"HOMEPAGE_DETAILS_REQUEST\"] = \"Request for HomePage VIEW\";\n  HomePageActionTypes[\"HOMEPAGE_DETAILS_SUCCESS\"] = \"HomePage VIEW successfully\";\n  HomePageActionTypes[\"HOMEPAGE_DETAILS_FAILURE\"] = \"HomePage view failed\";\n  return HomePageActionTypes;\n}({});\n\n// HomePage Details\nexport const viewHomePageRequest = createAction(HomePageActionTypes.HOMEPAGE_DETAILS_REQUEST);\nexport const viewHomePageSuccess = createAction(HomePageActionTypes.HOMEPAGE_DETAILS_SUCCESS);\nexport const viewHomePageFailed = createAction(HomePageActionTypes.HOMEPAGE_DETAILS_FAILURE);\nexport let AuthActionTypes = /*#__PURE__*/function (AuthActionTypes) {\n  AuthActionTypes[\"LOGIN_REQUEST\"] = \"Request login user!\";\n  AuthActionTypes[\"LOGIN_SUCCESS\"] = \"Login Successfully!\";\n  AuthActionTypes[\"LOGIN_FAILURE\"] = \"Login Failed\";\n  AuthActionTypes[\"FORGOT_PASSWORD_REQUEST\"] = \"Request forgot password\";\n  AuthActionTypes[\"FORGOT_PASSWORD_SUCCESS\"] = \"Email sent Successfully!\";\n  AuthActionTypes[\"FORGOT_PASSWORD_FAILURE\"] = \"Failed\";\n  AuthActionTypes[\"LINK_VERIFICATION_REQUEST\"] = \"Link verification request\";\n  AuthActionTypes[\"LINK_VERIFICATION_SUCCESS\"] = \"Link verified successfully\";\n  AuthActionTypes[\"LINK_VERIFICATION_FAILURE\"] = \"Link verification failed\";\n  AuthActionTypes[\"RESET_PASSWORD_REQUEST\"] = \"Request for reset password\";\n  AuthActionTypes[\"RESET_PASSWORD_SUCCESS\"] = \"Password reset successfully\";\n  AuthActionTypes[\"RESET_PASSWORD_FAILURE\"] = \"Failes password reset request\";\n  AuthActionTypes[\"LOGOUT_REQUEST\"] = \"Logout Started!\";\n  return AuthActionTypes;\n}({});\n\n// Login Actions\nexport const LoginRequest = createAction(AuthActionTypes.LOGIN_REQUEST);\nexport const LoginSuccess = createAction(AuthActionTypes.LOGIN_SUCCESS);\nexport const LoginFailed = createAction(AuthActionTypes.LOGIN_FAILURE);\n\n// Forgot Password Actions\nexport const ForgotPasswordRequest = createAction(AuthActionTypes.FORGOT_PASSWORD_REQUEST);\nexport const ForgotPasswordSuccess = createAction(AuthActionTypes.FORGOT_PASSWORD_SUCCESS);\nexport const ForgotPasswordFailure = createAction(AuthActionTypes.FORGOT_PASSWORD_FAILURE);\nexport const LoginInitialState = {\n  isLoading: true,\n  isLoggedIn: false,\n  attempts: \"\"\n};\nexport const ForgotPasswordInitialState = {\n  isLoading: true,\n  isError: false\n};\nexport const ResetPasswordInitialState = {\n  isLoading: true,\n  isError: false\n};\nexport const linkVerificationInitialState = {\n  isLoading: true,\n  isVerified: false,\n  verificationData: {\n    verifyToken: '',\n    email: '',\n    id: ''\n  }\n};","map":{"version":3,"names":["createAction","HomePageActionTypes","viewHomePageRequest","HOMEPAGE_DETAILS_REQUEST","viewHomePageSuccess","HOMEPAGE_DETAILS_SUCCESS","viewHomePageFailed","HOMEPAGE_DETAILS_FAILURE","AuthActionTypes","LoginRequest","LOGIN_REQUEST","LoginSuccess","LOGIN_SUCCESS","LoginFailed","LOGIN_FAILURE","ForgotPasswordRequest","FORGOT_PASSWORD_REQUEST","ForgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","ForgotPasswordFailure","FORGOT_PASSWORD_FAILURE","LoginInitialState","isLoading","isLoggedIn","attempts","ForgotPasswordInitialState","isError","ResetPasswordInitialState","linkVerificationInitialState","isVerified","verificationData","verifyToken","email","id"],"sources":["C:/xampp2/htdocs/dashboard/prasad/frontend-react/src/actions/homePageAction.ts"],"sourcesContent":["import { createAction } from 'redux-actions';\r\nimport { RouteComponentProps } from 'react-router';\r\n//import { IredirectPath } from '';\r\n\r\nexport enum HomePageActionTypes {\r\n  HOMEPAGE_DETAILS_REQUEST = 'Request for HomePage VIEW',\r\n  HOMEPAGE_DETAILS_SUCCESS = 'HomePage VIEW successfully',\r\n  HOMEPAGE_DETAILS_FAILURE = 'HomePage view failed',\r\n}\r\n\r\n// HomePage Details\r\nexport const viewHomePageRequest = createAction(\r\n  HomePageActionTypes.HOMEPAGE_DETAILS_REQUEST,\r\n);\r\nexport const viewHomePageSuccess = createAction(\r\n  HomePageActionTypes.HOMEPAGE_DETAILS_SUCCESS,\r\n);\r\nexport const viewHomePageFailed = createAction(\r\n  HomePageActionTypes.HOMEPAGE_DETAILS_FAILURE,\r\n);\r\n\r\n\r\n\r\nexport interface ILoginActionData {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n}\r\nexport enum AuthActionTypes {\r\n  LOGIN_REQUEST = 'Request login user!',\r\n  LOGIN_SUCCESS = 'Login Successfully!',\r\n  LOGIN_FAILURE = 'Login Failed',\r\n  FORGOT_PASSWORD_REQUEST = 'Request forgot password',\r\n  FORGOT_PASSWORD_SUCCESS = 'Email sent Successfully!',\r\n  FORGOT_PASSWORD_FAILURE = 'Failed',\r\n  LINK_VERIFICATION_REQUEST = 'Link verification request',\r\n  LINK_VERIFICATION_SUCCESS = 'Link verified successfully',\r\n  LINK_VERIFICATION_FAILURE = 'Link verification failed',\r\n  RESET_PASSWORD_REQUEST = 'Request for reset password',\r\n  RESET_PASSWORD_SUCCESS = 'Password reset successfully',\r\n  RESET_PASSWORD_FAILURE = 'Failes password reset request',\r\n  LOGOUT_REQUEST = 'Logout Started!',\r\n}\r\n\r\n// Login Actions\r\nexport const LoginRequest = createAction<ILoginActionData>(\r\n  AuthActionTypes.LOGIN_REQUEST,\r\n);\r\n\r\nexport const LoginSuccess = createAction(AuthActionTypes.LOGIN_SUCCESS);\r\nexport const LoginFailed = createAction(AuthActionTypes.LOGIN_FAILURE);\r\n\r\n// Forgot Password Actions\r\nexport const ForgotPasswordRequest = createAction<{ email: string }>(\r\n  AuthActionTypes.FORGOT_PASSWORD_REQUEST,\r\n);\r\n\r\nexport const ForgotPasswordSuccess = createAction(\r\n  AuthActionTypes.FORGOT_PASSWORD_SUCCESS,\r\n);\r\nexport const ForgotPasswordFailure = createAction(\r\n  AuthActionTypes.FORGOT_PASSWORD_FAILURE,\r\n);\r\n\r\n\r\nexport interface IAppRoutesProps extends RouteProps {\r\n  mainState?: ImainState;\r\n  loginReducer?: any;\r\n}\r\n\r\nexport interface IAppRoutes {\r\n  HOME: string;\r\n  COURSE: string;\r\n  LOGIN: string;\r\n  RESET_PASSWORD: string;\r\n  DASHBOARD: string;\r\n  WELCOME: string;\r\n  MY_ACCOUNT: string;\r\n  MY_VIDEOS: string;\r\n  MY_VIDEOS_VIEW: string;\r\n  MY_MODULE: string;\r\n  MY_SUB_MODULE: string;\r\n  PRETEST: string;\r\n  NOTFOUND: string;\r\n  TERMSCONDITIONS: string;\r\n  PRIVACYPOLICY: string;\r\n  LOGIN_GUIDE: string;\r\n  QUIZ: string;\r\n  FLAG_REVIEW: string,\r\n  START_QUIZ: string;\r\n  PSM_QUIZ: string;\r\n  PO_QUIZ: string;\r\n  BA_QUIZ: string;\r\n  REVIEW_QUIZ: string;\r\n  QUIZ_REVIEW_FUNCTIONALITY:string\r\n  QUIZ_HISTORY: string;\r\n  HELP_FAQ: string;\r\n  CHECK_IN: string;\r\n  RESOURCES: string;\r\n  DAILY_CHECK_IN: string;\r\n  PageNew: string;\r\n  VideoNew:string;\r\n}\r\n\r\n\r\nexport interface IHomePageModel {\r\n  isLoading: boolean;\r\n  homePageData: IHomePageData[];\r\n  homePageInfo: IHomePageData;\r\n  totalRecords: number;\r\n  isError: boolean;\r\n}\r\n\r\n\r\n\r\nexport interface IHomePageData {\r\n  mainSection: any;\r\n  howItWorks: any;\r\n  ourStory: any;\r\n  why: any;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n  id?: string;\r\n}\r\n\r\nexport interface IHomePageModel {\r\n  isLoading: boolean;\r\n  homePageData: IHomePageData[];\r\n  homePageInfo: IHomePageData;\r\n  totalRecords: number;\r\n  isError: boolean;\r\n}\r\n\r\nexport interface IHomePageProps extends RouteComponentProps {\r\n  homePageReducer: IHomePageModel;\r\n  viewHomePage: () => void;\r\n  // redirectTo?: (path: IredirectPath) => void;\r\n}\r\n interface ILoginModal {\r\n  isLoading: boolean;\r\n  isLoggedIn: boolean;\r\n  userData?: object;\r\n  error?: object;\r\n  attempts: string;\r\n}\r\nexport const LoginInitialState: ILoginModal = {\r\n  isLoading: true,\r\n  isLoggedIn: false,\r\n  attempts: \"\"\r\n};\r\n\r\nexport const ForgotPasswordInitialState: any = {\r\n  isLoading: true,\r\n  isError: false,\r\n};\r\n\r\nexport const ResetPasswordInitialState: any = {\r\n  isLoading: true,\r\n  isError: false,\r\n};\r\ninterface ILinkVerificationModal {\r\n  isLoading: boolean;\r\n  isVerified: boolean;\r\n  verificationData: {\r\n    verifyToken: string;\r\n    email: string;\r\n    id: string;\r\n  };\r\n}\r\nexport const linkVerificationInitialState: ILinkVerificationModal = {\r\n  isLoading: true,\r\n  isVerified: false,\r\n  verificationData: {\r\n    verifyToken: '',\r\n    email: '',\r\n    id: '',\r\n  },\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAE5C;;AAEA,WAAYC,mBAAmB,0BAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAA,OAAnBA,mBAAmB;AAAA;;AAM/B;AACA,OAAO,MAAMC,mBAAmB,GAAGF,YAAY,CAC7CC,mBAAmB,CAACE,wBACtB,CAAC;AACD,OAAO,MAAMC,mBAAmB,GAAGJ,YAAY,CAC7CC,mBAAmB,CAACI,wBACtB,CAAC;AACD,OAAO,MAAMC,kBAAkB,GAAGN,YAAY,CAC5CC,mBAAmB,CAACM,wBACtB,CAAC;AASD,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;;AAgB3B;AACA,OAAO,MAAMC,YAAY,GAAGT,YAAY,CACtCQ,eAAe,CAACE,aAClB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGX,YAAY,CAACQ,eAAe,CAACI,aAAa,CAAC;AACvE,OAAO,MAAMC,WAAW,GAAGb,YAAY,CAACQ,eAAe,CAACM,aAAa,CAAC;;AAEtE;AACA,OAAO,MAAMC,qBAAqB,GAAGf,YAAY,CAC/CQ,eAAe,CAACQ,uBAClB,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGjB,YAAY,CAC/CQ,eAAe,CAACU,uBAClB,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAGnB,YAAY,CAC/CQ,eAAe,CAACY,uBAClB,CAAC;AAmFD,OAAO,MAAMC,iBAA8B,GAAG;EAC5CC,SAAS,EAAE,IAAI;EACfC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,0BAA+B,GAAG;EAC7CH,SAAS,EAAE,IAAI;EACfI,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,yBAA8B,GAAG;EAC5CL,SAAS,EAAE,IAAI;EACfI,OAAO,EAAE;AACX,CAAC;AAUD,OAAO,MAAME,4BAAoD,GAAG;EAClEN,SAAS,EAAE,IAAI;EACfO,UAAU,EAAE,KAAK;EACjBC,gBAAgB,EAAE;IAChBC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,EAAE,EAAE;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}